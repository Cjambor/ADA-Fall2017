# This code is meant to import a csv, clean it up, filter and analyze, 
# then assign to emotional "buckets" for further analysis.

mydata <- read.csv('lgbt1.csv')

# Here is where I try to install an old sentiment package that doesn't want to work

install.packages('devtools')
install.packages('twitteR')
install.packages('wordcloud')
install.packages('RColorBrewer')
install.packages('plyr')
install.packages('ggplot2')
install.packages('tm')
install.packages('httr')
install.packages('lubridate')
install.packages('scales')

### This is where shit gets weird

download.file("http://cran.cnr.berkeley.edu/src/contrib/Archive/Rstem/Rstem_0.4-1.tar.gz", "Rstem_0.4-1.tar.gz")
install.packages("Rstem", repos = "http://www.omegahat.net/R")
install.packages("https://github.com/Cjambor/Rstem/tree/master/R/langs.R",repos=NULL, type="source")

library(Rstem)
library(devtools)
library(twitteR)
library(RColorBrewer)
library(wordcloud)
library(plyr)
library(ggplot2)
library(tm)
library(httr)
library(lubridate)
library(scales)

download.file("http://cran.r-project.org/src/contrib/Archive/sentiment/sentiment_0.2.tar.gz", "sentiment_0.2.tar.gz")
install.packages('/Users/c.jambor/Desktop/MSBA/FA2017/Bus Intel/datasets/sentiment_0.2.tar.gz', repos = NULL, type = 'source')

ls("package:sentiment")

library(sentiment)

# get the text
some_txt = sapply(mydata, function(x) x$getText())

# remove retweet entities
some_txt = gsub("(RT|via)((?:\\b\\W*@\\w+)+)", "", some_txt)

# remove at people
some_txt = gsub("@\\w+", "", some_txt)

# remove punctuation
some_txt = gsub("[[:punct:]]", "", some_txt)

# remove numbers
some_txt = gsub("[[:digit:]]", "", some_txt)

# remove html links
some_txt = gsub("http\\w+", "", some_txt)

# remove unnecessary spaces
some_txt = gsub("[ \t]{2,}", "", some_txt)
some_txt = gsub("^\\s+|\\s+$", "", some_txt)

# define "tolower error handling" function 
try.error = function(x)
{
  # create missing value
  y = NA
  # tryCatch error
  try_error = tryCatch(tolower(x), error=function(e) e)
  # if not an error
  if (!inherits(try_error, "error"))
    y = tolower(x)
  # result
  return(y)
}

# lower case using try.error with sapply 
some_txt = sapply(some_txt, try.error)

# remove NAs in some_txt
some_txt = some_txt[!is.na(some_txt)]
names(some_txt) = NULL

# classify emotion
class_emo = classify_emotion(some_txt, algorithm="bayes", prior=1.0)

# get emotion best fit
emotion = class_emo[,7]

# substitute NA's by "unknown"
emotion[is.na(emotion)] = "unknown"

# classify polarity
class_pol = classify_polarity(some_txt, algorithm="bayes")

# get polarity best fit
polarity = class_pol[,4]

# data frame with results
sent_df = data.frame(text=some_txt, emotion=emotion,
                     polarity=polarity, stringsAsFactors=FALSE)
# sort data frame
sent_df = within(sent_df,
                 emotion <- factor(emotion, levels=names(sort(table(emotion), decreasing=TRUE))))
